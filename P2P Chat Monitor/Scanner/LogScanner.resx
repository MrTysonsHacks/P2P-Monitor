<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABwAA
        AHUAAADrAAAA9wAAAOoAAADQAAAAqgAAAHMAAAA5AAAADwAAAAEAAAAEAAAABQAAAAUAAAAFAAAABQAA
        AAUAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACgAAAFgAAADOAAAA/gAAAP8AAAD/AAAA+wAAAOYAAACwAAAAXQAAABMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAACNAAAA7gAAAP8AAAD/AAAA/wAAAP8AAAD6AAAAxAAA
        ADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAABHAAAAwQAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAAewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAfAAA
        AOYAAAD/AAAA/wAAAPoAAABVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAOQAAALIAAAD7AAAA6QAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAFAAAAPAAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAHgAAABYAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAGcAAAB3AAAACwAAAAAAAAABAAAAHAAAAAwAAAAAAAAAAAAA
        AAAAAAABAAAALgAAAJoAAADNAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAB4AAAAygAA
        AIgAAAA8AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAADPAAAAigAA
        AAYAAAAAAAAAAAAAAD8AAADfAAAA7AAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAACAAAAA8wAAAPEAAAC/AAAAdAAAAC4AAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjgAA
        AP8AAADvAAAASAAAAAAAAAAKAAAArAAAAPQAAABjAAAAAQAAAAAAAAAAAAAAAAAAAAIAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAUAAABeAAAA4wAAAP8AAAD+AAAA6AAAAK4AAABiAAAAIgAAAAMAAAAAAAAAAAAA
        ABMAAADMAAAA/wAAAP8AAACyAAAADQAAAEgAAADlAAAAeAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAASQAA
        ACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAzwAAAP8AAAD/AAAA/wAAAPwAAADdAAAAWAAA
        AAAAAAAAAAAAMAAAAOsAAAD/AAAA/wAAAPAAAABMAAAAhgAAAIYAAAAIAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAACoAAAAYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAAtgAAAP4AAAD/AAAA/wAA
        AP8AAACGAAAAAAAAAAAAAABNAAAA+QAAAP8AAAD/AAAA/wAAAKIAAAAXAAAACQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGgAAANsAAACbAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAmAAA
        APgAAAD/AAAA9QAAAEoAAAAAAAAAAAAAAGkAAAD/AAAA/wAAAP8AAAD/AAAA4wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA3AAAA8wAAAMoAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAALAAAAdwAAAPIAAADKAAAAFAAAAAAAAAAAAAAAegAAAP8AAAD/AAAA/wAAAP8AAAD+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkAAAD9AAAA6wAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAARwAAAEMAAAABAAAAAAAAAAAAAACBAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAP8AAAD9AAAAXgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA/wAAAP8AAACSAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAKcAAAD/AAAA/wAA
        AMQAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB6AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAsgAA
        AP8AAAD/AAAA6QAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /APAAfgD4ADgB/AAAA/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>